{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nadav Kaduri\\\\Desktop\\\\Projects\\\\Yammie app\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment, useState } from 'react';\nimport Header from './components/Header/Header';\nimport NewOrder from './components/NewOrder/NewOrder';\nimport Modal from './components/UI/Modal';\nimport classes from './components/UI/ModalMessageContent.module.css';\nimport Menu from './menu';\nimport ModalErrorContent from './components/Modals/ModalErrorContent';\nimport ModalSuccessContent from './components/Modals/ModalSuccessContent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [successMessageIsShown, setMessageSuccessIsShown] = useState(false);\n  const [confirmMessageIsShown, setConfirmMessageIsShown] = useState(false);\n  const [errorMessageIsShown, setErrorMessageIsShown] = useState(false);\n  const [totalPrice, setTotalPrice] = useState(0);\n  const [totalCalories, setTotalCalories] = useState(0);\n  const [error, setError] = useState(false);\n  const [needToupdateData, setNeedToUpdateData] = useState(false);\n\n  const showSuccessMessageHandler = () => {\n    setMessageSuccessIsShown(true);\n  };\n\n  const hideSuccessMessageHandler = () => {\n    setMessageSuccessIsShown(false);\n  };\n\n  const showConfirmMessageHandler = () => {\n    setConfirmMessageIsShown(true);\n  };\n\n  const hideConfirmMessageHandler = () => {\n    setConfirmMessageIsShown(false);\n  };\n\n  const showErrorMessageHandler = () => {\n    setErrorMessageIsShown(true);\n  };\n\n  const hideErrorMessageHandler = () => {\n    setErrorMessageIsShown(false);\n  };\n\n  function addOrderHandler(order) {\n    var order_data = order;\n    console.log(\"entered addOrderHandler!!\");\n    console.log(order_data);\n    console.log(order);\n    setError(false); // check if all inputs are valid\n\n    for (const value of Object.values(order)) {\n      if (value === \"\") {\n        console.log(\"entered to empty!!!!\");\n        setError(true);\n        showErrorMessageHandler();\n        return;\n      }\n    }\n\n    setMessageContent(order);\n    showConfirmMessageHandler();\n  }\n\n  ;\n\n  async function sendOrder() {\n    console.log(\"entered sendOrder!!\");\n    console.log(order_data); // send order to the server\n\n    try {\n      const response = await fetch('http://localhost:3000/order', {\n        method: 'POST',\n        body: JSON.stringify(order_data),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const data = await response.json();\n\n      if (!response.ok) {\n        throw new Error('something went wrong!');\n      }\n\n      console.log(data);\n      hideConfirmMessageHandler();\n      showSuccessMessageHandler();\n    } catch (error) {\n      setError(true);\n      hideConfirmMessageHandler();\n    }\n  } // function for updating total price and total calories for the requested order\n\n\n  const setMessageContent = order => {\n    let mainDish = order[\"main dish\"];\n    let sideDish = order[\"side dish\"];\n    let drink = order[\"drink\"];\n    setTotalPrice(parseInt(Menu[\"main dish\"][mainDish][\"price\"]) + parseInt(Menu[\"side dish\"][sideDish][\"price\"]) + parseInt(Menu[\"drink\"][drink][\"price\"]));\n    setTotalCalories(parseInt(Menu[\"main dish\"][mainDish][\"calories\"]) + parseInt(Menu[\"side dish\"][sideDish][\"calories\"]) + parseInt(Menu[\"drink\"][drink][\"calories\"]));\n  };\n\n  const ModalConfirmContent = props => {\n    const send = order => {\n      props.onConfirm(order);\n    };\n\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.total,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\" Total Price is : \", totalPrice, \"\\u20AA \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.total,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\" Total Calories is : \", totalCalories, \" kcal  \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: classes.button,\n          onClick: props.onClose,\n          children: \" Cancel \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: classes.button,\n          onClick: props.onConfirm,\n          children: \" Confirm \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 12\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), confirmMessageIsShown && /*#__PURE__*/_jsxDEV(Modal, {\n      children: /*#__PURE__*/_jsxDEV(ModalConfirmContent, {\n        onConfirm: sendOrder,\n        onClose: hideConfirmMessageHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 40\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 33\n    }, this), !error && !confirmMessageIsShown && successMessageIsShown && /*#__PURE__*/_jsxDEV(Modal, {\n      children: /*#__PURE__*/_jsxDEV(ModalSuccessContent, {\n        onClose: hideSuccessMessageHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 76\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 69\n    }, this), error && errorMessageIsShown && /*#__PURE__*/_jsxDEV(Modal, {\n      children: [\" \", /*#__PURE__*/_jsxDEV(ModalErrorContent, {\n        onClose: hideErrorMessageHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 48\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 40\n    }, this), /*#__PURE__*/_jsxDEV(NewOrder, {\n      onAddOrder: addOrderHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"g8rhCSZ8JN6lduVsj00jhOommJw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Fragment","useState","Header","NewOrder","Modal","classes","Menu","ModalErrorContent","ModalSuccessContent","App","successMessageIsShown","setMessageSuccessIsShown","confirmMessageIsShown","setConfirmMessageIsShown","errorMessageIsShown","setErrorMessageIsShown","totalPrice","setTotalPrice","totalCalories","setTotalCalories","error","setError","needToupdateData","setNeedToUpdateData","showSuccessMessageHandler","hideSuccessMessageHandler","showConfirmMessageHandler","hideConfirmMessageHandler","showErrorMessageHandler","hideErrorMessageHandler","addOrderHandler","order","order_data","console","log","value","Object","values","setMessageContent","sendOrder","response","fetch","method","body","JSON","stringify","headers","data","json","ok","Error","mainDish","sideDish","drink","parseInt","ModalConfirmContent","props","send","onConfirm","total","actions","button","onClose"],"sources":["C:/Users/Nadav Kaduri/Desktop/Projects/Yammie app/client/src/App.js"],"sourcesContent":["import {Fragment, useState} from 'react';\nimport Header from './components/Header/Header'\nimport NewOrder from './components/NewOrder/NewOrder';\nimport Modal from './components/UI/Modal';\nimport classes from './components/UI/ModalMessageContent.module.css';\nimport Menu from './menu';\nimport ModalErrorContent from './components/Modals/ModalErrorContent';\nimport ModalSuccessContent from './components/Modals/ModalSuccessContent';\n\nfunction App() {\n\n  const [successMessageIsShown, setMessageSuccessIsShown] = useState(false);\n  const [confirmMessageIsShown, setConfirmMessageIsShown] = useState(false);\n  const [errorMessageIsShown, setErrorMessageIsShown] = useState(false);\n  const [totalPrice, setTotalPrice] = useState(0);\n  const [totalCalories, setTotalCalories] = useState(0);\n  const [error, setError] = useState(false);\n  const [needToupdateData, setNeedToUpdateData] = useState(false);\n\n  const showSuccessMessageHandler = ()=> {\n    setMessageSuccessIsShown(true);\n  }\n  const hideSuccessMessageHandler = ()=> {\n    setMessageSuccessIsShown(false);\n  }\n\n  const showConfirmMessageHandler = ()=> {\n    setConfirmMessageIsShown(true);\n  }\n  const hideConfirmMessageHandler = ()=> {\n    setConfirmMessageIsShown(false);\n  }\n\n  const showErrorMessageHandler = ()=> {\n    setErrorMessageIsShown(true);\n  }\n  const hideErrorMessageHandler = ()=> {\n    setErrorMessageIsShown(false);\n  }\n\n\n  function addOrderHandler(order) {\n    var order_data = order;\n    console.log(\"entered addOrderHandler!!\");\n    console.log(order_data)\n    console.log(order)\n    setError(false);\n    // check if all inputs are valid\n    for (const value of Object.values(order)) {\n      if(value === \"\"){\n          console.log(\"entered to empty!!!!\")\n          setError(true);\n          showErrorMessageHandler();\n          return;\n      }\n    }\n    setMessageContent(order);\n    showConfirmMessageHandler();\n  }; \n\n  async function sendOrder() {\n    console.log(\"entered sendOrder!!\");\n    console.log(order_data);\n    // send order to the server\n    try{   \n      const response = await fetch('http://localhost:3000/order', {\n        method: 'POST',\n        body: JSON.stringify(order_data),\n        headers: {\n          'Content-Type' : 'application/json'\n        }\n      });\n      const data = await response.json();\n      if(!response.ok){\n        throw new Error('something went wrong!');\n      }\n      console.log(data);\n      hideConfirmMessageHandler();\n      showSuccessMessageHandler();\n    }\n    catch(error){\n        setError(true);\n        hideConfirmMessageHandler();\n    }  \n  }\n\n  // function for updating total price and total calories for the requested order\n  const setMessageContent = (order)=>{\n    let mainDish = order[\"main dish\"];\n    let sideDish = order[\"side dish\"];\n    let drink = order[\"drink\"];\n\n    setTotalPrice(parseInt(Menu[\"main dish\"][mainDish][\"price\"]) + parseInt(Menu[\"side dish\"][sideDish][\"price\"]) \n    + parseInt(Menu[\"drink\"][drink][\"price\"]));\n\n    setTotalCalories(parseInt(Menu[\"main dish\"][mainDish][\"calories\"]) + parseInt(Menu[\"side dish\"][sideDish][\"calories\"]) \n    + parseInt(Menu[\"drink\"][drink][\"calories\"]));\n  };\n\n  const ModalConfirmContent = (props) =>{\n\n    const send = (order)=> {\n      props.onConfirm(order);\n    }\n    return <Fragment> \n      <div className = {classes.total}>\n        <span> Total Price is : {totalPrice}₪ </span>\n      </div>\n      <div className = {classes.total}>\n        <span> Total Calories is : {totalCalories} kcal  </span> \n      </div>\n      <div className= {classes.actions}>\n        <button className= {classes.button} onClick = {props.onClose}> Cancel </button>\n        <button className= {classes.button} onClick = {props.onConfirm} > Confirm </button>\n      </div>\n    </Fragment>\n  }\n\n  return (\n    <Fragment>\n      <Header/>\n      {confirmMessageIsShown && <Modal><ModalConfirmContent onConfirm = {sendOrder} onClose = {hideConfirmMessageHandler}/></Modal>}\n      {!error && !confirmMessageIsShown && successMessageIsShown && <Modal><ModalSuccessContent onClose = {hideSuccessMessageHandler}/></Modal>}\n      {error && errorMessageIsShown && <Modal> <ModalErrorContent onClose = {hideErrorMessageHandler}/> </Modal>}\n      <NewOrder onAddOrder = {addOrderHandler}/>\n    </Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}